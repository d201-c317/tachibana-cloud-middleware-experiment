var search_data = {"index":{"searchIndex":["processor","rabbit","tools","listen()","md5()","new()","process()","publish()","random()","reverse()","gemfile","gemfile.lock"],"longSearchIndex":["processor","rabbit","tools","rabbit#listen()","tools::md5()","rabbit::new()","processor::process()","rabbit#publish()","tools::random()","tools::reverse()","",""],"info":[["Processor","","Processor.html","","<p>The main work logic.\n"],["Rabbit","","Rabbit.html","","<p>A class to maintain a list of function to communicate with RabbitMQ via\nBunny gem. You Probably Don&#39;t …\n"],["Tools","","Tools.html","","<p># A Class To maintain a set of functions.\n"],["listen","Rabbit","Rabbit.html#method-i-listen","()","<p>Message Queue Listener and Job Dispatcher\n"],["md5","Tools","Tools.html#method-c-md5","()","<p>MD5 Hash\n"],["new","Rabbit","Rabbit.html#method-c-new","()","<p>Initialize by start connection\n"],["process","Processor","Processor.html#method-c-process","(message, msg_id)","<p>Process the Stuff.\n"],["publish","Rabbit","Rabbit.html#method-i-publish","(message, corr)","<p>Message Queue Publisher\n"],["random","Tools","Tools.html#method-c-random","()","<p>Generate Random Number\n"],["reverse","Tools","Tools.html#method-c-reverse","(string)","<p>Reverse the string\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true source “rubygems.org”\n<p>gem “bunny” gem “json” …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  amq-protocol (2.0.1)\n  bunny (2.6.1)\n    amq-protocol (&gt;= 2.0.1) ...</pre>\n"]]}}